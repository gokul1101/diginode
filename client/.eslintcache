[{"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\index.js":"1","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\App.jsx":"2","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Main.jsx":"3","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Login\\Login.jsx":"4","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Edit\\Edit.jsx":"5","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Navbar.jsx":"6","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Iframe\\Iframe.jsx":"7","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Trending\\Trending.jsx":"8","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Favorites\\Favorite.jsx":"9","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Playlist\\Playlist.jsx":"10","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Home\\Home.jsx":"11","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\VideoContainer\\VideoContainer.jsx":"12"},{"size":252,"mtime":1616146517055,"results":"13","hashOfConfig":"14"},{"size":1846,"mtime":1620966350464,"results":"15","hashOfConfig":"14"},{"size":1295,"mtime":1618322813448,"results":"16","hashOfConfig":"14"},{"size":9579,"mtime":1616146517004,"results":"17","hashOfConfig":"14"},{"size":1485,"mtime":1620966350495,"results":"18","hashOfConfig":"14"},{"size":15713,"mtime":1620966350495,"results":"19","hashOfConfig":"14"},{"size":13750,"mtime":1620967351871,"results":"20","hashOfConfig":"14"},{"size":560,"mtime":1618744508386,"results":"21","hashOfConfig":"14"},{"size":1423,"mtime":1619323198655,"results":"22","hashOfConfig":"14"},{"size":11985,"mtime":1620967408861,"results":"23","hashOfConfig":"14"},{"size":9198,"mtime":1620966350495,"results":"24","hashOfConfig":"14"},{"size":2407,"mtime":1619350104916,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fg85ty",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\index.js",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\App.jsx",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Edit\\Edit.jsx",["54","55","56","57"],"import { Button } from \"@material-ui/core\";\r\nimport react from \"react\";\r\nimport space from \"../../images/FreeVector-Space-Vector.jpg\";\r\nimport \"./Edit.css\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst Edit = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid p-0\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5\">\r\n            <div className=\"d-flex\">\r\n              <img\r\n                src={space}\r\n                className=\"img-fluid\"\r\n                style={{ height: \"100vh\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-7 d-flex align-items-center justify-content-center\">\r\n            <div className=\"d-flex align-items-center justify-content-center flex-column\">\r\n              <img\r\n                src={space}\r\n                style={{ height: \"150px\", width: \"150px\", borderRadius: \"50%\" }}\r\n              />\r\n              <div className=\"inpu-container d-flex flex-column edit-input\">\r\n                <input\r\n                  placeholder=\"Enter Password\"\r\n                  className=\"mt-4 mb-4 p-2 pl-3\"\r\n                />\r\n                <input placeholder=\"Enter New Password\" className=\"p-2 pl-3 mb-4\" />\r\n              </div>\r\n              <Button variant=\"contained\" color=\"primary\" href=\"/\" >\r\n                CHANGE PASSWORD\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Navbar.jsx",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Iframe\\Iframe.jsx",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Trending\\Trending.jsx",["58"],"import React, { useEffect } from \"react\";\r\nimport VideoContainer from \"../VideoContainer/VideoContainer\";\r\nimport \"./Trending.css\";\r\n\r\nconst Trending = (props) => {\r\n  useEffect(() => {\r\n    props.trendingVideos();\r\n  }, []);\r\n  const onloadFrame = (e) => {\r\n    props.addToHistory(e.currentTarget.id, \"trending\");\r\n    props.searchVideos();\r\n  };\r\n  return (\r\n    <div className=\"container trend\">\r\n      <VideoContainer\r\n        onloadFrame={onloadFrame}\r\n        fetchData={props.fetchTrendData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Favorites\\Favorite.jsx",[],"C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Playlist\\Playlist.jsx",["59","60"],"import React, { useState, useEffect } from \"react\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport empty from \"../../../../images/empty.svg\";\r\nimport \"./Playlist.css\";\r\nconst Playlist = (props) => {\r\n  let [toggle, setToggle] = useState(false);\r\n  let [playlists, setPlaylists] = useState(props.playlists);\r\n  let [searchPlaylists, setSearchPlaylists] = useState(props.playlists);\r\n  let [currentPlaylist, setCurrentPlaylist] = useState({});\r\n  const search = (name) => {\r\n    if (name === \"\") setSearchPlaylists(playlists);\r\n    else {\r\n      let arr = playlists.filter((playlist) =>\r\n        playlist.name.toLowerCase().includes(name.toLowerCase())\r\n      );\r\n      setSearchPlaylists(arr);\r\n    }\r\n  };\r\n  const play = (playlistName) => {\r\n    setToggle(true);\r\n    setCurrentPlaylist(playlists.find((obj) => obj.name === playlistName));\r\n  };\r\n  const openIframe = (vid) => {\r\n    props.setCurrentVideo(vid);\r\n    props.setToggle(true);\r\n  };\r\n  const textShadow = () => {\r\n    let shadow = \"\";\r\n    for (let i = 0; i < 6; i++) {\r\n      shadow += (shadow ? \",\" : \"\") + -i * 1 + \"px \" + i * 1 + \"px 0 #d9d9d9\";\r\n    }\r\n    return shadow;\r\n  };\r\n  const deleteVideoFromPlaylist = async (video, playlistName) => {\r\n    const res = await fetch(`http://localhost:5000/removeFromPlaylist`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        playlistName,\r\n        videoId: video.videoId,\r\n      }),\r\n    });\r\n    const [playlist] = await res.json();\r\n    if (res.status === 200) {\r\n      props.snackBar(\"Video removed from playlist\", \"error\");\r\n      let arr = [];\r\n      props.playlists.forEach((obj) => {\r\n        if (obj.name === playlist.name) arr.push(playlist);\r\n        else arr.push(obj);\r\n      });\r\n      props.setPlaylists(arr);\r\n    } else props.snackBar(\"Something wrong in the server\", \"error\");\r\n  };\r\n  useEffect(() => {\r\n    setPlaylists(props.playlists);\r\n    setSearchPlaylists(props.playlists);\r\n    if (toggle)\r\n      setCurrentPlaylist(\r\n        props.playlists.find((obj) => obj.name === currentPlaylist.name)\r\n      );\r\n  }, [props.playlists]);\r\n  return toggle ? (\r\n    <div className=\"container-fluid position-relative my-3 d-flex flex-column align-items-center justofy-content-center playlist-videos\">\r\n      <div\r\n        className=\"back-to-playlist h-auto w-auto p-2 position-absolute\"\r\n        onClick={() => setToggle(false)}\r\n      >\r\n        <KeyboardBackspaceIcon\r\n          style={{\r\n            color: \"#fff\",\r\n            height: 30,\r\n            width: 40,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"d-flex position-relative auto-flex\" style={{ top: \"100px\" }}>\r\n        <div className=\"col-md-8 col-lg-3  hide-playlist\">\r\n          <div className=\"img-container\">\r\n            <div className=\"playlist-imgs position-relative\">\r\n              <img\r\n                src=\"https://i.ytimg.com/vi/fRD_3vJagxk/hqdefault.jpg\"\r\n                className=\"img-fluid\"\r\n              />\r\n              <div className=\"playlist-overlay-img position-absolute text-center d-flex align-items-center justify-content-center p-1\">\r\n                <i className=\"fab fa-google-play pr-2\"></i>PLAY ALL\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"playlist-content mt-2\">\r\n            <h3 className=\"play-name mb-2\">\r\n              {\" \"}\r\n              <strong>Avenger - Age of Ultron</strong>\r\n            </h3>\r\n            <span className=\"playlist-avg-view\">\r\n              33 videos <span> &bull; </span> 7,942 views <span> &bull; </span>{\" \"}\r\n              Last updated on Oct 2, 2020{\" \"}\r\n            </span>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-9\">\r\n          {currentPlaylist.list.map((obj, index) => {\r\n            return (\r\n              <div\r\n                className=\"playlist-video-card position-relative p-0 mb-3\"\r\n                key={obj.videoId}\r\n                data-label={obj.channelTitle}\r\n              >\r\n                <div className=\"d-flex playchange overlay-playlist\">\r\n                  <div\r\n                    className=\"col-md-12 col-lg-4 d-flex align-items-center justify-content-center p-0 playlist-demo-div\"\r\n                    onClick={() => openIframe(obj)}\r\n                  >\r\n                    <img\r\n                      src={obj.thumbnails}\r\n                      alt=\"playlist-video-img\"\r\n                      className=\"img-fluid playlist-video-img-right\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-12 col-lg-8 p-2 overlay-playlist\" onClick={() => openIframe(obj)}>\r\n                    <div className=\"d-flex\">\r\n                      <div className=\"play-list-text mr-auto text-wrap text-left my-2 \">\r\n                        <span>\r\n                          <strong>{`${index + 1}. ${obj.title}`}</strong>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <IconButton\r\n                          onClick={() =>\r\n                            deleteVideoFromPlaylist(obj, currentPlaylist.name)\r\n                          }\r\n                          aria-label=\"delete\"\r\n                          style={{ color: \"white\" }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <span\r\n                        style={{ fontSize: 15 }}\r\n                        className=\"badge badge-success\"\r\n                      >\r\n                        {obj.channelTitle}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-75\">\r\n                      <span>{obj.description}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              // <div\r\n              //   className=\"video-card position-relative p-0 h-auto mb-3\"\r\n              //   key={obj.videoId}\r\n              // >\r\n              //   <div className=\"video-card-content d-flex position-relative\">\r\n              //     <div\r\n              //       className=\"playlist-video-img position-relative col-4 p-0\"\r\n              //       onClick={() => openIframe(obj)}\r\n              //     >\r\n              //       <img src={obj.thumbnails} alt=\"playlist-video-img\" className=\"img-fluid\"/>\r\n              //     </div>\r\n              //     <div className=\"delete-button position-absolute mr-3 mt-2\">\r\n              // <IconButton\r\n              //   onClick={() =>\r\n              //     deleteVideoFromPlaylist(obj, currentPlaylist.name)\r\n              //   }\r\n              //   aria-label=\"delete\"\r\n              //   style={{ color: \"white\" }}\r\n              // >\r\n              //   <DeleteIcon />\r\n              // </IconButton>\r\n              //     </div>\r\n              //     <div className=\"p-3 col-8\" onClick={() => openIframe(obj)}>\r\n              //       <div className=\"row\">\r\n              //         <span className=\"badge badge-danger text-wrap text-left my-2\">\r\n              //           {`${index + 1}. ${obj.title}`}\r\n              //         </span>\r\n              //       </div>\r\n              //       <div className=\"row\">\r\n              //         <span\r\n              //           style={{ fontSize: 15 }}\r\n              //           className=\"badge badge-success\"\r\n              //         >\r\n              //           {obj.channelTitle}\r\n              //         </span>\r\n              //       </div>\r\n              //       <div className=\"row\">\r\n              //         <span className=\"badge badge-info text-wrap text-left my-2\">\r\n              //           {obj.description}\r\n              //         </span>\r\n              //       </div>\r\n              //     </div>\r\n              //   </div>\r\n              // </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"container-fluid playlists d-flex\">\r\n      <div className=\"container-fluid d-flex flex-column align-items-center\">\r\n        {playlists.length !== 0 ? (\r\n          <form\r\n            className=\"form-inline mt-3\"\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <div className=\"form-group mx-auto\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => search(e.target.value)}\r\n                placeholder=\"Search a Playlist\"\r\n              />\r\n              <i className=\"fa fa-search form-control-feedback position-relative\"></i>\r\n            </div>\r\n          </form>\r\n        ) : null}\r\n        <div\r\n          className={`d-flex ${\r\n            searchPlaylists.length === 0\r\n              ? \"\"\r\n              : \"align-items-center justify-content-center\"\r\n          } flex-wrap mt-5 pl-3`}\r\n        >\r\n          {searchPlaylists.length === 0 ? (\r\n            <div\r\n              id=\"nodata\"\r\n              className=\"d-flex align-items-center justify-content-between mt-4\"\r\n            >\r\n              <img className=\"img-fluid mt-3 mr-3\" src={empty} alt=\"nodata\" />\r\n              <div\r\n                id=\"text\"\r\n                style={{ textShadow: textShadow() }}\r\n                data-text=\"You doesn't created any playlist yet.\"\r\n                className=\"mt-3 ml-3 position-relative text-white text-center\"\r\n              >\r\n                You doesn't created any playlist yet.\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            searchPlaylists.map((playlist, index) => {\r\n              return (\r\n                <div\r\n                  className=\"flex-fill playlist-card m-3\"\r\n                  onClick={(e) => play(e.currentTarget.id)}\r\n                  key={index}\r\n                  id={playlist ? playlist.name : index}\r\n                >\r\n                  <div className=\"playlist h-100 w-100\">\r\n                    <div className=\"playlist-img position-relative\">\r\n                      {playlist.list.length !== 0 ? (\r\n                        <>\r\n                          <img\r\n                            className=\"img-fluid\"\r\n                            src={playlist.list[0].thumbnails}\r\n                            alt=\"playlist-img\"\r\n                          />\r\n                          <div className=\"playlist-play-icon d-flex align-items-center justify-content-center position-absolute\">\r\n                            <IconButton aria-label=\"playlist\">\r\n                              <PlayArrowIcon\r\n                                style={{\r\n                                  color: \"#f55050\",\r\n                                  height: 40,\r\n                                  width: 40,\r\n                                }}\r\n                              />\r\n                            </IconButton>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"playlist-detail d-flex align-items-center justify-content-between mt-2 pt-1 px-4\">\r\n                      <h6 className=\"text-white m-0\">{playlist.name}</h6>\r\n                      <p className=\"m-0 text-white\">\r\n                        {playlist.list.length !== 1\r\n                          ? `${playlist.list.length} videos`\r\n                          : `${playlist.list.length} video`}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\Home\\Home.jsx",["61","62"],"import IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Trending from \"../Trending/Trending\";\r\n\r\nimport VideoContainer from \"../VideoContainer/VideoContainer\";\r\nimport \"./Home.css\";\r\nconst Home = (props) => {\r\n  const deleteVideoHistory = async (video) => {\r\n    try {\r\n      const res = await fetch(\r\n        `http://localhost:5000/video/${video.videoId}/delete`,\r\n        {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: localStorage.getItem(\"user\"),\r\n            videoId: video.videoId,\r\n          }),\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      if(res.status === 200) {\r\n        props.setHistory(data);\r\n        props.snackBar(\"Video deleted Successfully\", \"info\");\r\n      } else props.snackBar(\"Something wrong in the server\", \"error\")\r\n    } catch(e) {\r\n      props.snackBar(\"Something wrong in the server\", \"error\")\r\n    }\r\n  };\r\n  const clearHistory = async () => {\r\n    try{\r\n      let res = await fetch(`http://localhost:5000/video/clearHistory`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: localStorage.getItem(\"user\"),\r\n        }),\r\n      });\r\n      if(res.status === 200) {\r\n        if (props.history.length !== 0)\r\n          props.snackBar(\"History cleared Successfully\", \"info\");\r\n        props.setHistory([]);\r\n      } else props.snackBar(\"Something wrong in the server\", \"error\")\r\n    } catch(e) {\r\n      props.snackBar(\"Something wrong in the server\", \"error\")\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    props.getData();\r\n    props.searchVideos();\r\n  },[]);\r\n  const historyFrame = (e) => {\r\n    let videoId = e.currentTarget.id;\r\n    let vid = props.history.find((data) => data.videoId === videoId);\r\n    props.setCurrentVideo(vid);\r\n    props.setToggle(true);\r\n  };\r\n  const onloadFrame = (e) => {\r\n    props.addToHistory(e.currentTarget.id, \"home\")\r\n    props.setHistory(props.addHistory)\r\n  };\r\n  return (\r\n    <>\r\n      {/* Banner Content */}\r\n      \r\n      <div className=\"trending-area mt-3 mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"trending-main\">\r\n            <div className=\"row\">\r\n              <div className=\"d-flex align-items-center justify-content-center col-lg-8 mb-2\">\r\n                <div className=\"d-flex align-items-center justify-content-center top-banner\">\r\n                  <div className=\"top-bannner-img position-relative\">\r\n                    <img\r\n                      src=\"https://www.teahub.io/photos/full/3-34370_avengers-endgame-portals-poster.png\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"top-banner-text position-absolute\">\r\n                      <h2>\r\n                        Anna Lora Stuns In White At Her Australian Premiere\r\n                      </h2>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12 col-md-6 col-sm-6 mb-3\">\r\n                    <div className=\"top-banner\">\r\n                      <div className=\"top-bannner-img position-relative\">\r\n                        <img\r\n                          src=\"https://images.pexels.com/photos/2514035/pexels-photo-2514035.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                          alt=\"\"\r\n                        />\r\n                        <div className=\"top-banner-text top-banner-text2 position-absolute\">\r\n                          <h2>\r\n                            Secretart for Economic Air plane that looks like\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-12 col-md-6 col-sm-6\">\r\n                    <div className=\"top-banner\">\r\n                      <div className=\"top-bannner-img position-relative\">\r\n                        <img\r\n                          src=\"https://images.pexels.com/photos/2514035/pexels-photo-2514035.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                          alt=\"\"\r\n                        />\r\n                        <div className=\"top-banner-text top-banner-text2 position-absolute\">\r\n                          <h2>\r\n                            Secretart for Economic Air plane that looks like\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.history && (props.history.length !== 0)? (\r\n          <div className=\"container continue-watch\">\r\n          <div className=\"continue-text mb-5\">\r\n            <h5 className=\"float-left mb-3\">Continue Watching</h5>\r\n            <button\r\n              className=\"iconbutton float-right d-flex\"\r\n              onClick={clearHistory}\r\n              style={{ color: \"white\", borderColor: \"white\" }}\r\n            >\r\n              <h6\r\n                className=\"mt-2 mr-2\"\r\n                style={{ fontWeight: \"700\", letterSpacing: 1.3 }}\r\n              >\r\n                CLEAR\r\n              </h6>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"-2 -10 18 28\"\r\n                className=\"delete-animation\"\r\n              >\r\n                <path\r\n                  d=\"M10.5,2.3V1.5c0,0,0-0.1,0-0.1C10.5,0.6,9.8,0,9,0H6c0,0-0.1,0-0.1,0C5.1,0,4.5,0.7,4.5,1.5v0.8H0v1.5h15V2.3H10.5z M9,2.2  H6V1.5h3V2.2z\"\r\n                  className=\"lid\"\r\n                />\r\n                <g className=\"can\">\r\n                  <path d=\"M12.8,3.8v12c0,0,0,0,0,0.1c0,0.4-0.4,0.7-0.8,0.7H3c0,0,0,0-0.1,0c-0.4,0-0.7-0.4-0.7-0.8v-12H0.8v12   c0,0.6,0.2,1.2,0.7,1.6C1.8,17.8,2.4,18,3,18h9c0,0,0,0,0,0c1.2,0,2.2-1,2.2-2.2v-12H12.8z\" />\r\n                  <rect x=\"3.8\" y=\"6\" width=\"1.5\" height=\"8.2\" />\r\n                  <rect x=\"6.8\" y=\"6\" width=\"1.5\" height=\"8.2\" />\r\n                  <rect x=\"9.8\" y=\"6\" width=\"1.5\" height=\"8.2\" />\r\n                </g>\r\n              </svg>\r\n            </button>\r\n\r\n            <div className=\"container-fluid continue-scroll py-3\">\r\n                \r\n              <div className=\"row flex-nowrap watching mt-3 pb-5\">\r\n                {\r\n                  props.history && props.history.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"col-12  col-sm-6 col-md-6 col-lg-4\"\r\n                      key={index}\r\n                    >\r\n                      <div className=\"item-card-history\">\r\n                        <img\r\n                          className=\"img-fluid\"\r\n                          src={item.thumbnails}\r\n                          height=\"150\"\r\n                          width=\"150\"\r\n                          alt=\"img\"\r\n                        />\r\n                        <div className=\"info-history\">\r\n                          <Link\r\n                            id=\"play-video\"\r\n                            className=\"video-play-button-history\"\r\n                            to=\"/\"\r\n                          >\r\n                            <span\r\n                              className=\"play-span-history\"\r\n                              onClick={historyFrame}\r\n                              id={item.videoId}\r\n                            ></span>\r\n                          </Link>\r\n                          <div className=\"delete-button position-absolute\">\r\n                            <IconButton\r\n                              onClick={() => deleteVideoHistory(item)}\r\n                              aria-label=\"delete\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                          <div className=\"badges\">\r\n                            <span className=\"badge badge-danger text-left pb-1\">\r\n                              {item.title.split(\"|\").shift()}\r\n                            </span>\r\n                            <br />\r\n                            <span className=\"badge badge-warning text-left pb-1\">\r\n                              {item.channelTitle}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        ) : null\r\n      }\r\n      <VideoContainer onloadFrame={onloadFrame} fetchData={props.fetchData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ELCOT\\Desktop\\diginode\\client\\src\\components\\Main\\Navbar\\VideoContainer\\VideoContainer.jsx",[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":13,"column":15,"nodeType":"70","endLine":17,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":22,"column":15,"nodeType":"70","endLine":25,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":8,"column":6,"nodeType":"73","endLine":8,"endColumn":8,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":66,"column":6,"nodeType":"73","endLine":66,"endColumn":23,"suggestions":"76"},{"ruleId":"68","severity":1,"message":"69","line":85,"column":15,"nodeType":"70","endLine":88,"endColumn":17},{"ruleId":"63","severity":1,"message":"77","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":57,"column":5,"nodeType":"73","endLine":57,"endColumn":7,"suggestions":"78"},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'SaveIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["79"],"React Hook useEffect has missing dependencies: 'currentPlaylist.name' and 'toggle'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPlaylist' needs the current value of 'currentPlaylist.name'.",["80"],"'Trending' is defined but never used.",["81"],{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"82","fix":"86"},"Update the dependencies array to be: [props]",{"range":"87","text":"88"},"Update the dependencies array to be: [currentPlaylist.name, props.playlists, toggle]",{"range":"89","text":"90"},{"range":"91","text":"88"},[221,223],"[props]",[2346,2363],"[currentPlaylist.name, props.playlists, toggle]",[1875,1877]]